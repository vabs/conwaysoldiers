{"version":3,"sources":["components/Cell/Cell.js","components/Row/Row.jsx","components/Grid/Grid.jsx","App.js","serviceWorker.js","index.js"],"names":["Cell","props","state","posX","posY","cellClick","bind","this","handleClick","className","canBeSelected","selected","canBeMovedTo","onClick","Component","Row","columns","index","length","push","key","number","CellGrid","grid","intiliazeArray","isAnyCellSelected","selectedPosition","x","y","rows","tempGrid","to","from","Object","assign","highlight","e","isCellSelected","highlightMoveCells","move","setState","App","Grid","container","spacing","item","xs","Typography","variant","component","gutterBottom","align","Container","maxWidth","Box","pb","Divider","pt","Link","href","target","rel","CardMedia","title","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29160c4d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Cell.css';\n\nclass Cell extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      posX: props.posX,\n      posY: props.posY\n    }\n\n    this.cellClick = this.cellClick.bind(this);\n  }\n\n  cellClick() {\n    // console.log(this);\n    this.props.handleClick(this);\n    // console.log(event.target);\n    // if(this.state.canBeSelected) {\n    //   this.setState(state => ({\n    //     selected: !state.selected,\n    //   }))\n    // }\n    // if(this.state.canBeSelected) {\n    //   this.setState({\n    //     selected: true,\n    //     canBeSelected: true\n    //   })\n    // }\n  }\n\n  render() {\n    return (\n      <div \n        className={`cell \n            ${this.props.canBeSelected ? \"select \" : \"\"}\n            ${this.props.selected ? \"selected \" : \"\"}\n            ${this.props.canBeMovedTo ? \"canBeMovedTo \" : \"\"}\n          `}\n        onClick={() => this.cellClick()}\n      >\n      </div>\n    )\n  }\n\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport './Row.css';\nimport Cell from '../Cell/Cell';\n\n\nclass Row extends Component {\n\n  render() {\n    const columns = [];\n    for(let index =0; index < this.props.columns.length; index++) {\n      columns.push(<Cell key={index} \n          canBeSelected={this.props.columns[index].canBeSelected}\n          handleClick={this.props.handleClick}\n          posX={this.props.number}\n          posY={index} \n          selected={this.props.columns[index].selected}\n          canBeMovedTo={this.props.columns[index].canBeMovedTo} />)\n    }\n    return (\n      <div className=\"float-left\">\n        {columns}\n      </div>\n    )\n  }\n}\n\nexport default Row;","import React, {Component} from 'react';\nimport Row from '../Row/Row';\nimport './Grid.css';\n\nclass CellGrid extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      grid: this.intiliazeArray(20, 20),\n      isAnyCellSelected: false,\n      selectedPosition: {}\n    }\n  }\n\n  intiliazeArray(x, y) {\n    let rows = [];\n\n    for(let posX=0; posX < x; posX++) {\n      let columns = [];\n      for(let posY=0; posY < y; posY++) {\n        columns.push({\n          canBeSelected: posX > 15 ? true : false,\n          selected: false,\n          canBeMovedTo: false\n        })\n      }\n      rows.push(columns)\n    }\n\n    return rows;\n  }\n\n  move(tempGrid, to, from) {\n    tempGrid[from.x][from.y] = Object.assign({}, \n      tempGrid[from.x][from.y],\n      {\n        selected: false,\n        canBeSelected: false,\n      });\n\n    tempGrid[to.x][to.y] = Object.assign({}, \n      tempGrid[to.x][to.y],\n      {\n        selected: false,\n        canBeSelected: true,\n        canBeMovedTo: false\n      });\n\n    // remove block\n    if(to.x === from.x) {\n      if(to.y > from.y) {\n        tempGrid[from.x][from.y + 1] = Object.assign({}, \n          tempGrid[from.x][from.y + 1],\n          {\n            selected: false,\n            canBeSelected: false,\n            canBeMovedTo: false\n          });\n      } else {\n        tempGrid[from.x][from.y - 1] = Object.assign({}, \n          tempGrid[from.x][from.y - 1],\n          {\n            selected: false,\n            canBeSelected: false,\n            canBeMovedTo: false\n          });\n      }\n    } else {\n      if(to.x > from.x) {\n        tempGrid[from.x + 1][from.y] = Object.assign({}, \n          tempGrid[from.x + 1][from.y],\n          {\n            selected: false,\n            canBeSelected: false,\n            canBeMovedTo: false\n          });\n      } else {\n        tempGrid[from.x - 1][from.y] = Object.assign({}, \n          tempGrid[from.x - 1][from.y],\n          {\n            selected: false,\n            canBeSelected: false,\n            canBeMovedTo: false\n          });\n      }\n    }\n    return tempGrid;\n  }\n\n  highlightMoveCells(tempGrid, selected, highlight) {\n    // check if can move left\n    if(selected.x - 2 > 0 &&\n      (tempGrid[selected.x-1][selected.y]).canBeSelected === true &&\n       (tempGrid[selected.x-2][selected.y]).canBeSelected === false) {\n      tempGrid[selected.x-2][selected.y] = Object.assign({}, \n        tempGrid[selected.x-2][selected.y],\n        {canBeMovedTo: highlight});\n      }\n\n    // check if can move right\n    if(selected.x + 2 < 20 && \n      (tempGrid[selected.x+1][selected.y]).canBeSelected === true &&\n      (tempGrid[selected.x+2][selected.y]).canBeSelected === false) {\n      tempGrid[selected.x+2][selected.y] = Object.assign({}, \n        tempGrid[selected.x+2][selected.y],\n        {canBeMovedTo: highlight});\n      }\n    // check if can move up\n    if(selected.y + 2 < 20 && \n      (tempGrid[selected.x][selected.y + 1]).canBeSelected === true && \n      (tempGrid[selected.x][selected.y + 2]).canBeSelected === false) {\n      tempGrid[selected.x][selected.y + 2] = Object.assign({}, \n        tempGrid[selected.x][selected.y + 2],\n        {canBeMovedTo: highlight});\n      }\n    // check if can move down\n    if(selected.y - 2 > 0 && \n      (tempGrid[selected.x][selected.y - 1]).canBeSelected === true &&\n      (tempGrid[selected.x][selected.y - 2]).canBeSelected === false) {\n      tempGrid[selected.x][selected.y - 2] = Object.assign({}, \n        tempGrid[selected.x][selected.y - 2],\n        {canBeMovedTo: highlight});\n      }\n    return tempGrid;\n  }\n    \n  handleClick(e) {\n    let tempGrid = this.state.grid;\n    let isCellSelected = this.state.isAnyCellSelected;\n    let selectedPosition = this.state.selectedPosition;\n    if(!isCellSelected && e.props.canBeSelected) {\n      tempGrid[e.props.posX][e.props.posY] = Object.assign({}, \n        tempGrid[e.props.posX][e.props.posY],\n        {selected: true});\n        isCellSelected = true;\n        selectedPosition = {\n          x: e.props.posX,\n          y: e.props.posY,\n        }\n      tempGrid = this.highlightMoveCells(tempGrid, selectedPosition, true);\n    } else {\n      if(isCellSelected) {\n        if(e.props.canBeMovedTo) {\n          isCellSelected = false;\n          tempGrid = this.move(tempGrid, {\n            x: e.props.posX,\n            y: e.props.posY\n          },  selectedPosition);\n          tempGrid = this.highlightMoveCells(tempGrid, selectedPosition, false);\n        }\n        else if(e.props.selected) {\n          tempGrid[e.props.posX][e.props.posY] = Object.assign({}, \n            tempGrid[e.props.posX][e.props.posY],\n            {selected: false});\n          isCellSelected = false;\n          tempGrid = this.highlightMoveCells(tempGrid, selectedPosition, false);\n        }\n      }  \n    }\n    \n    this.setState({\n      grid: tempGrid,\n      isAnyCellSelected: isCellSelected,\n      selectedPosition\n    })\n  }\n\n  render() {\n    const rows = []\n    for(let index=0; index<this.props.x; index++) {\n      rows.push(<Row \n        key={index} \n        columns={this.state.grid[index]} \n        handleClick={this.handleClick}\n        number={index} />);\n    }\n    \n    return (\n      <div className=\"margin-5\">\n        {rows}\n      </div>\n    )\n  }\n\n}\n\nexport default CellGrid;","import React from 'react';\nimport './App.css';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\n\nimport CellGrid from './components/Grid/Grid';\n\nfunction App() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h1\" component=\"h2\" gutterBottom align=\"center\">\n          Conway's Soldiers\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Container maxWidth=\"lg\"> \n          <Grid container spacing={1}>\n            <Grid item xs={8} align=\"center\">\n              <CellGrid x={20} y={20} />\n            </Grid>\n            <Grid item xs={4}>\n              <Box pb={2}>\n                <Typography variant=\"h5\" gutterBottom>\n                  How To Play: <br />\n                  1. The square can only move when it has a nearby square to jump over. <br />\n                  2. The move can be done horizontally or vertically.<br />\n                  3. Diagonal moves are not allowed.<br />\n                </Typography>\n              </Box>\n\n              <Divider />\n              <Divider />\n              <Box pb={2} pt={2}>\n                <Typography variant=\"h6\">\n                  <Typography>\n                    Further Reading\n                  </Typography>\n                  <Link href=\"https://en.wikipedia.org/wiki/Conway%27s_Soldiers\" target=\"_blank\" rel=\"noopener\">\n                    Conway's Soldiers - Wikipedia\n                  </Link>\n                </Typography>\n              </Box>\n\n              <Divider />\n              <Divider />\n              <Box pt={2}>\n                <Typography variant=\"h6\">\n                  Related Videos\n                  <Box pb={3} pt={1}>\n                    <CardMedia\n                      component='iframe'\n                      title='test'\n                      src='https://www.youtube.com/embed/Y7hm0Xeicus'\n                    />\n                  </Box>\n                  <Divider />\n                  <Box>\n                    <CardMedia\n                      component='iframe'\n                      title='test'\n                      src='https://www.youtube.com/embed/Or0uWM9bT5w'\n                    />\n                  </Box>\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid> \n        </Container>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}